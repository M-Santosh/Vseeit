package com.santosh.vseeit;import android.content.Intent;import android.graphics.Color;import android.os.Handler;import android.view.LayoutInflater;import android.view.MotionEvent;import android.view.View;import android.view.ViewGroup;import android.widget.Button;import android.widget.GridView;import android.widget.ImageView;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.constraintlayout.widget.ConstraintLayout;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import androidx.viewpager.widget.ViewPager;import java.util.List;import java.util.Timer;import java.util.TimerTask;public class HomePageAdapter extends RecyclerView.Adapter {    private List<HomePagemodel> homePagemodelList;    public HomePageAdapter(List<HomePagemodel> homePagemodelList) {        this.homePagemodelList = homePagemodelList;    }    @Override    public int getItemViewType(int position) {       switch (homePagemodelList.get(position).getType()){           case 0:               return HomePagemodel.BANNER_SLIDER;           case 1:               return HomePagemodel.STRIP_AD_BANNER;           case 2:               return HomePagemodel.HORIZONTAL_PRO_VIEW;           case 3:               return HomePagemodel.GRID_PRO_VIEW;               default:                    return -1;       }    }    @NonNull    @Override    public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {        switch (viewType){          case HomePagemodel.BANNER_SLIDER:              View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.sliding_ad_layout,parent,false);              return new BannerSliderViewholder(view);              case HomePagemodel.STRIP_AD_BANNER:                  View stripview = LayoutInflater.from(parent.getContext()).inflate(R.layout.strip_ad_layout,parent,false);                  return new stripAdbannviewholder(stripview);                case HomePagemodel.HORIZONTAL_PRO_VIEW:                    View Horizonview = LayoutInflater.from(parent.getContext()).inflate(R.layout.horizontal_scroll_layout,parent,false);                    return new Horizonviewholder(Horizonview);                    case HomePagemodel.GRID_PRO_VIEW:                        View grdview = LayoutInflater.from(parent.getContext()).inflate(R.layout.grid_product_layout,parent,false);                        return new Gridviewholder(grdview);                    default:                        return null;      }    }    @Override    public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position)    {    switch (homePagemodelList.get(position).getType()){        case HomePagemodel.BANNER_SLIDER:        List<SliderModel> sliderModelList = homePagemodelList.get(position).getSliderModelList();            ((BannerSliderViewholder)holder).setBannerSliderviewpager(sliderModelList);            break;            case HomePagemodel.STRIP_AD_BANNER:                int resource = homePagemodelList.get(position).getResource();                String color = homePagemodelList.get(position).getBgcolor();                ((stripAdbannviewholder)holder).setStripAd(resource,"#FFFFFF");                break;                case HomePagemodel.HORIZONTAL_PRO_VIEW:                    String horizomtalayoutitle = homePagemodelList.get(position).getTitle();                    List<HorizontalProductModel> horizontalProductModelList = homePagemodelList.get(position).getHorizontalProductModelList();                    ((Horizonviewholder)holder).setHorizontalProlayout(horizontalProductModelList,horizomtalayoutitle);                    break;                case HomePagemodel.GRID_PRO_VIEW:                    String gridlayoutTitle = homePagemodelList.get(position).getTitle();                    List<HorizontalProductModel> gridProductModelList = homePagemodelList.get(position).getHorizontalProductModelList();                    ((Gridviewholder)holder).setGridprolay(gridProductModelList,gridlayoutTitle);                break;        default:                return;    }    }    @Override    public int getItemCount() {        return homePagemodelList.size();    }    public class BannerSliderViewholder extends RecyclerView.ViewHolder {        private ViewPager bannerSliderviewpager;        private int currentpage = 2;        private Timer timer;        final private long DELAY_TIME = 2000;        final private long PERIOD_TIME = 1000;        public BannerSliderViewholder(@NonNull View itemView) {            super(itemView);            bannerSliderviewpager = itemView.findViewById(R.id.banner_viewpager);        }        private void setBannerSliderviewpager(final List<SliderModel>sliderModelList){            SliderAdapter sliderAdapter = new SliderAdapter(sliderModelList);            bannerSliderviewpager.setAdapter(sliderAdapter);            bannerSliderviewpager.setClipToPadding(false);            bannerSliderviewpager.setPageMargin(20);            bannerSliderviewpager.setCurrentItem(currentpage);            ViewPager.OnPageChangeListener onPageChangeListener = new ViewPager.OnPageChangeListener() {                @Override                public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {                }                @Override                public void onPageSelected(int position) {                    currentpage = position;                }                @Override                public void onPageScrollStateChanged(int state) {                    if (state == ViewPager.SCROLL_STATE_IDLE) {                        pageLooper(sliderModelList);                    }                }            };            bannerSliderviewpager.addOnPageChangeListener(onPageChangeListener);            startbannerslidershow(sliderModelList);            bannerSliderviewpager.setOnTouchListener(new View.OnTouchListener() {                @Override                public boolean onTouch(View v, MotionEvent event) {                    pageLooper(sliderModelList);                    stopbannerslideshow();                    if (event.getAction() == MotionEvent.ACTION_UP) {                        startbannerslidershow(sliderModelList);                    }                    return false;                }            });        }        private void pageLooper(List<SliderModel>sliderModelList) {            if (currentpage == sliderModelList.size() - 2) {                currentpage = 2;                bannerSliderviewpager.setCurrentItem(currentpage, false);            }            if (currentpage == 1) {                currentpage = sliderModelList.size() - 3;                bannerSliderviewpager.setCurrentItem(currentpage, false);            }        }        private void startbannerslidershow(final List<SliderModel>sliderModelList) {            final Handler handler = new Handler();            final Runnable update = new Runnable() {                @Override                public void run() {                    if (currentpage >= sliderModelList.size()) {                        currentpage = 1;                    }                    bannerSliderviewpager.setCurrentItem(currentpage++, true);                }            };            timer = new Timer();            timer.schedule(new TimerTask() {                @Override                public void run() {                    handler.post(update);                }            }, DELAY_TIME, PERIOD_TIME);        }        private void stopbannerslideshow() {            timer.cancel();            //Banner slider        }    }    public class stripAdbannviewholder extends RecyclerView.ViewHolder{        private ImageView stripAdImage;        private ConstraintLayout stripAdcontainer;        public stripAdbannviewholder(@NonNull View itemView) {            super(itemView);            stripAdImage = itemView.findViewById(R.id.strip_ad_image);            stripAdcontainer = itemView.findViewById(R.id.strip_ad_container);        }        private void setStripAd(int resource,String color){            stripAdImage.setImageResource(resource);            stripAdcontainer.setBackgroundColor(Color.parseColor("#FFFFFF"));        }    }    public class Horizonviewholder extends RecyclerView.ViewHolder{        private TextView horizontitle;        private Button horizonbtn;        private RecyclerView horizoncycleview;        public Horizonviewholder(@NonNull View itemView) {            super(itemView);            horizontitle = itemView.findViewById(R.id.horiz_scr_lay_title);            horizonbtn = itemView.findViewById(R.id.horiz_scr_lay_btn);            horizoncycleview = itemView.findViewById(R.id.horiz_scr_lay_recyclerview);        }        private void setHorizontalProlayout(List<HorizontalProductModel>horizontalProductModelList,String title) {            horizontitle.setText(title);            if (horizontalProductModelList.size() > 8){                horizonbtn.setVisibility(View.VISIBLE);                horizonbtn.setOnClickListener(new View.OnClickListener() {                    @Override                    public void onClick(View v) {                        Intent viewall = new Intent(itemView.getContext(),ViewallActivity.class);                        viewall.putExtra("layout_code",0);                        itemView.getContext().startActivity(viewall);                    }                });            }else{                horizonbtn.setVisibility(View.INVISIBLE);            }            HorizontalProductAdapter horizontalProductAdapter = new HorizontalProductAdapter(horizontalProductModelList);            LinearLayoutManager linearLayoutManager = new LinearLayoutManager(itemView.getContext());            linearLayoutManager.setOrientation(LinearLayoutManager.HORIZONTAL);            horizoncycleview.setLayoutManager(linearLayoutManager);            horizoncycleview.setAdapter(horizontalProductAdapter);            horizontalProductAdapter.notifyDataSetChanged();        }    }    public class Gridviewholder extends RecyclerView.ViewHolder{        private TextView gridtitle;        private Button gridallbtn;        private GridView gridView;        public Gridviewholder(@NonNull View itemView) {            super(itemView);            gridtitle = itemView.findViewById(R.id.gird_product_title);            gridallbtn = itemView.findViewById(R.id.grid_product_btn);            gridView = itemView.findViewById(R.id.grid_product_gridvw);        }        private void setGridprolay(List<HorizontalProductModel>horizontalProductModelList, String title){            gridtitle.setText(title);            gridView.setAdapter(new GridproductAdapter(horizontalProductModelList));            gridallbtn.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View v) {                    Intent viewall = new Intent(itemView.getContext(),ViewallActivity.class);                    viewall.putExtra("layout_code",1);                    itemView.getContext().startActivity(viewall);                }            });        }    }}